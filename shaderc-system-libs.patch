diff -urNp -x '*.orig' shaderc-2024.0.org/CMakeLists.txt shaderc-2024.0/CMakeLists.txt
--- shaderc-2024.0.org/CMakeLists.txt	2024-03-08 19:52:40.000000000 +0100
+++ shaderc-2024.0/CMakeLists.txt	2024-04-04 01:12:30.772967746 +0200
@@ -120,7 +120,8 @@ endif(MSVC)
 
 # Configure subdirectories.
 # We depend on these for later projects, so they should come first.
-add_subdirectory(third_party)
+set(glslang_SOURCE_DIR /usr/include/glslang)
+set(spirv-tools_SOURCE_DIR /usr)
 
 add_subdirectory(libshaderc_util)
 add_subdirectory(libshaderc)
@@ -132,7 +133,7 @@ endif()
 add_custom_target(build-version
   ${Python_EXECUTABLE}
   ${CMAKE_CURRENT_SOURCE_DIR}/utils/update_build_version.py
-  ${shaderc_SOURCE_DIR} ${spirv-tools_SOURCE_DIR} ${glslang_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}/build-version.inc
+  ${shaderc_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}/build-version.inc
   COMMENT "Update build-version.inc in the Shaderc build directory (if necessary).")
 
 function(define_pkg_config_file NAME LIBS)
--- shaderc-2025.3/glslc/test/CMakeLists.txt.orig	2025-06-24 23:18:01.000000000 +0200
+++ shaderc-2025.3/glslc/test/CMakeLists.txt	2025-07-24 07:12:51.370182917 +0200
@@ -24,7 +24,7 @@ if(${SHADERC_ENABLE_TESTS})
   add_test(NAME glslc_tests
     COMMAND ${Python_EXECUTABLE}
     ${CMAKE_CURRENT_SOURCE_DIR}/glslc_test_framework.py
-    $<TARGET_FILE:glslc_exe> $<TARGET_FILE:spirv-dis>
+    $<TARGET_FILE:glslc_exe> spirv-dis
     --test-dir ${CMAKE_CURRENT_SOURCE_DIR})
     
 endif()
diff -urNp -x '*.orig' shaderc-2024.0.org/utils/update_build_version.py shaderc-2024.0/utils/update_build_version.py
--- shaderc-2024.0.org/utils/update_build_version.py	2024-03-08 19:52:40.000000000 +0100
+++ shaderc-2024.0/utils/update_build_version.py	2024-04-04 01:12:30.772967746 +0200
@@ -128,18 +128,18 @@ def get_version_string(project, director
 
 
 def main():
-    if len(sys.argv) != 5:
-        print(('usage: {} <shaderc-dir> <spirv-tools-dir> <glslang-dir> <output-file>'.format(
+    if len(sys.argv) != 3:
+        print(('usage: {} <shaderc-dir> <output-file>'.format(
             sys.argv[0])))
         sys.exit(1)
 
-    projects = ['shaderc', 'spirv-tools', 'glslang']
+    projects = ['shaderc']
     new_content = ''.join([
         '"{}\\n"\n'.format(get_version_string(p, d))
         for (p, d) in zip(projects, sys.argv[1:])
     ])
 
-    output_file = sys.argv[4]
+    output_file = sys.argv[2]
     mkdir_p(os.path.dirname(output_file))
 
     if os.path.isfile(output_file):
